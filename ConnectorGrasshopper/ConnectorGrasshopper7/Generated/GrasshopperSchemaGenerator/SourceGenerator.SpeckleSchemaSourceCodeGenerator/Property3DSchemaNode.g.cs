//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class Property3D_9f7a3797_0ff9_8198_d419_a2a5a5e5494d: CreateSchemaObjectBase {
        
        static Property3D_9f7a3797_0ff9_8198_d419_a2a5a5e5494d() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Property3D_9f7a3797_0ff9_8198_d419_a2a5a5e5494d(): base("Property3D (by name)", "Property3D (by name)", "Creates a Speckle structural 3D element property", "Structural", "Properties"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("9f7a3797-0ff9-8198-d419-a2a5a5e5494d");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Properties.Property3D.ctor(System.String)", "Objects.Structural.Properties.Property3D");
          base.AddedToDocument(document);
        }
    }

    public class Property3D_31431817_64e2_986e_f6c4_fc2f6aff19aa: CreateSchemaObjectBase {
        
        static Property3D_31431817_64e2_986e_f6c4_fc2f6aff19aa() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Property3D_31431817_64e2_986e_f6c4_fc2f6aff19aa(): base("Property3D", "Property3D", "Creates a Speckle structural 3D element property", "Structural", "Properties"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("31431817-64e2-986e-f6c4-fc2f6aff19aa");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Properties.Property3D.ctor(System.String,Objects.Structural.PropertyType3D,Objects.Structural.Materials.StructuralMaterial)", "Objects.Structural.Properties.Property3D");
          base.AddedToDocument(document);
        }
    }
    
    public class Property3D_9f7a3797_0ff9_8198_d419_a2a5a5e5494dUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("c60c85d5-b0c6-4b25-4cb3-bbd9a73650fd");
        public Guid UpgradeTo => new("9f7a3797-0ff9-8198-d419-a2a5a5e5494d");
    }


    public class Property3D_31431817_64e2_986e_f6c4_fc2f6aff19aaUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("d9040352-fe75-bf01-4399-0fde95390339");
        public Guid UpgradeTo => new("31431817-64e2-986e-f6c4-fc2f6aff19aa");
    }

}
