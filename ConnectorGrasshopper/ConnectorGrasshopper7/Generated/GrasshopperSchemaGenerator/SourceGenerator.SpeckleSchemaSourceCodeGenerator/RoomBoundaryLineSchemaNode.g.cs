//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class RoomBoundaryLine_859d98b0_5ab9_72ec_96e5_c44940dabc16: CreateSchemaObjectBase {
        
        static RoomBoundaryLine_859d98b0_5ab9_72ec_96e5_c44940dabc16() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public RoomBoundaryLine_859d98b0_5ab9_72ec_96e5_c44940dabc16(): base("RoomBoundaryLine", "RoomBoundaryLine", "Creates a Revit room boundary line", "Revit", "Curves"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("859d98b0-5ab9-72ec-96e5-c44940dabc16");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.BuiltElements.Revit.Curve.RoomBoundaryLine.ctor(Objects.ICurve,System.Collections.Generic.List`1[Objects.BuiltElements.Revit.Parameter])", "Objects.BuiltElements.Revit.Curve.RoomBoundaryLine");
          base.AddedToDocument(document);
        }
    }
    
    public class RoomBoundaryLine_859d98b0_5ab9_72ec_96e5_c44940dabc16UpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("f08b41d6-40f8-c658-8c80-6a057c7de5e8");
        public Guid UpgradeTo => new("859d98b0-5ab9-72ec-96e5-c44940dabc16");
    }

}
