//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class GridLine_c62b809d_996f_e290_8326_6b27332d571e: CreateSchemaObjectBase {
        
        static GridLine_c62b809d_996f_e290_8326_6b27332d571e() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public GridLine_c62b809d_996f_e290_8326_6b27332d571e(): base("GridLine", "GridLine", "Creates a Speckle grid line", "BIM", "Other"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("c62b809d-996f-e290-8326-6b27332d571e");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.BuiltElements.GridLine.ctor(Objects.ICurve)", "Objects.BuiltElements.GridLine");
          base.AddedToDocument(document);
        }
    }

    public class GridLine_2174215c_3016_2256_71a1_54e3190e131b: CreateSchemaObjectBase {
        
        static GridLine_2174215c_3016_2256_71a1_54e3190e131b() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public GridLine_2174215c_3016_2256_71a1_54e3190e131b(): base("GridLine", "GridLine", "Creates a Speckle grid line with a label", "BIM", "Other"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("2174215c-3016-2256-71a1-54e3190e131b");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.BuiltElements.GridLine.ctor(Objects.ICurve,System.String)", "Objects.BuiltElements.GridLine");
          base.AddedToDocument(document);
        }
    }
    
    public class GridLine_c62b809d_996f_e290_8326_6b27332d571eUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("8bf64d48-c317-a5a2-3b4f-0b9da6319cdb");
        public Guid UpgradeTo => new("c62b809d-996f-e290-8326-6b27332d571e");
    }


    public class GridLine_2174215c_3016_2256_71a1_54e3190e131bUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("eb1b76bc-68ae-9be2-0451-dedffdabb9f9");
        public Guid UpgradeTo => new("2174215c-3016-2256-71a1-54e3190e131b");
    }

}
