//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class Duct_2feb6b2e_3f82_56b6_47d7_56b0c918dace: CreateSchemaObjectBase {
        
        static Duct_2feb6b2e_3f82_56b6_47d7_56b0c918dace() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Duct_2feb6b2e_3f82_56b6_47d7_56b0c918dace(): base("Duct", "Duct", "Creates a Speckle duct", "BIM", "MEP"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("2feb6b2e-3f82-56b6-47d7-56b0c918dace");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.BuiltElements.Duct.ctor(Objects.Geometry.Line,System.Double,System.Double,System.Double,System.Double)", "Objects.BuiltElements.Duct");
          base.AddedToDocument(document);
        }
    }

    public class Duct_9ba7a728_2053_a164_d9bf_e54dba366f19: CreateSchemaObjectBase {
        
        static Duct_9ba7a728_2053_a164_d9bf_e54dba366f19() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Duct_9ba7a728_2053_a164_d9bf_e54dba366f19(): base("Duct", "Duct", "Creates a Speckle duct", "BIM", "MEP"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("9ba7a728-2053-a164-d9bf-e54dba366f19");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.BuiltElements.Duct.ctor(Objects.ICurve,System.Double,System.Double,System.Double,System.Double)", "Objects.BuiltElements.Duct");
          base.AddedToDocument(document);
        }
    }
    
    public class Duct_2feb6b2e_3f82_56b6_47d7_56b0c918daceUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("9dec3320-989c-6fb8-c872-2ab8af187b31");
        public Guid UpgradeTo => new("2feb6b2e-3f82-56b6-47d7-56b0c918dace");
    }


    public class Duct_9ba7a728_2053_a164_d9bf_e54dba366f19UpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("6cfe2d78-9922-f015-d553-27ad425a5302");
        public Guid UpgradeTo => new("9ba7a728-2053-a164-d9bf-e54dba366f19");
    }

}
