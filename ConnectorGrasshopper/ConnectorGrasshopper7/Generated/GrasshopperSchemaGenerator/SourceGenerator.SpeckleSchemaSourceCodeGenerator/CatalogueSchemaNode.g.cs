//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class Catalogue_7b578c02_face_6929_0c2a_a3763d4619c9: CreateSchemaObjectBase {
        
        static Catalogue_7b578c02_face_6929_0c2a_a3763d4619c9() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Catalogue_7b578c02_face_6929_0c2a_a3763d4619c9(): base("Catalogue (by description)", "Catalogue (by description)", "Creates a Speckle structural section profile based on a catalogue section description", "Structural", "Section Profile"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("7b578c02-face-6929-0c2a-a3763d4619c9");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Properties.Profiles.Catalogue.ctor(System.String)", "Objects.Structural.Properties.Profiles.Catalogue");
          base.AddedToDocument(document);
        }
    }

    public class Catalogue_4834895b_5fe3_4925_65d7_d0662c3ce97c: CreateSchemaObjectBase {
        
        static Catalogue_4834895b_5fe3_4925_65d7_d0662c3ce97c() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Catalogue_4834895b_5fe3_4925_65d7_d0662c3ce97c(): base("Catalogue", "Catalogue", "Creates a Speckle structural section profile", "Structural", "Section Profile"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("4834895b-5fe3-4925-65d7-d0662c3ce97c");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Properties.Profiles.Catalogue.ctor(System.String,System.String,System.String,System.String)", "Objects.Structural.Properties.Profiles.Catalogue");
          base.AddedToDocument(document);
        }
    }
    
    public class Catalogue_7b578c02_face_6929_0c2a_a3763d4619c9UpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("700cf14d-8e4f-2cd3-124d-cd69fcc3f553");
        public Guid UpgradeTo => new("7b578c02-face-6929-0c2a-a3763d4619c9");
    }


    public class Catalogue_4834895b_5fe3_4925_65d7_d0662c3ce97cUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("9ed854ff-708d-c146-6ffa-75bfe12d1d99");
        public Guid UpgradeTo => new("4834895b-5fe3-4925-65d7-d0662c3ce97c");
    }

}
