//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class LoadFace_cc247bb9_4977_afe7_95c0_46ff24e51a9d: CreateSchemaObjectBase {
        
        static LoadFace_cc247bb9_4977_afe7_95c0_46ff24e51a9d() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public LoadFace_cc247bb9_4977_afe7_95c0_46ff24e51a9d(): base("Face Load", "Face Load", "Creates a Speckle structural face (2D elem/member) load", "Structural", "Loading"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("cc247bb9-4977-afe7-95c0-46ff24e51a9d");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Loading.LoadFace.ctor(Objects.Structural.Loading.LoadCase,System.Collections.Generic.List`1[Speckle.Core.Models.Base],Objects.Structural.Loading.FaceLoadType,Objects.Structural.Loading.LoadDirection2D,Objects.Structural.LoadAxisType,System.Collections.Generic.List`1[System.Double],System.Collections.Generic.List`1[System.Double],System.Boolean,System.String)", "Objects.Structural.Loading.LoadFace");
          base.AddedToDocument(document);
        }
    }

    public class LoadFace_f895a41d_ebd2_d412_a971_194113cca67e: CreateSchemaObjectBase {
        
        static LoadFace_f895a41d_ebd2_d412_a971_194113cca67e() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public LoadFace_f895a41d_ebd2_d412_a971_194113cca67e(): base("Face Load (user-defined axis)", "Face Load (user-defined axis)", "Creates a Speckle structural face (2D elem/member) load (specified using a user-defined axis)", "Structural", "Loading"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("f895a41d-ebd2-d412-a971-194113cca67e");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Loading.LoadFace.ctor(Objects.Structural.Loading.LoadCase,System.Collections.Generic.List`1[Speckle.Core.Models.Base],Objects.Structural.Loading.FaceLoadType,Objects.Structural.Loading.LoadDirection2D,Objects.Structural.Geometry.Axis,System.Collections.Generic.List`1[System.Double],System.Collections.Generic.List`1[System.Double],System.Boolean,System.String)", "Objects.Structural.Loading.LoadFace");
          base.AddedToDocument(document);
        }
    }
    
    public class LoadFace_cc247bb9_4977_afe7_95c0_46ff24e51a9dUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("3ed34c4d-730b-6f20-5e5a-44270cc32b72");
        public Guid UpgradeTo => new("cc247bb9-4977-afe7-95c0-46ff24e51a9d");
    }


    public class LoadFace_f895a41d_ebd2_d412_a971_194113cca67eUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("18b63117-6ca0-1ec3-f72e-087f4ee97381");
        public Guid UpgradeTo => new("f895a41d-ebd2-d412-a971-194113cca67e");
    }

}
