//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class PropertyMass_4940801b_0868_d60a_3c07_b87efe21b512: CreateSchemaObjectBase {
        
        static PropertyMass_4940801b_0868_d60a_3c07_b87efe21b512() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public PropertyMass_4940801b_0868_d60a_3c07_b87efe21b512(): base("PropertyMass", "PropertyMass", "Creates a Speckle structural mass property", "Structural", "Properties"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("4940801b-0868-d60a-3c07-b87efe21b512");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Properties.PropertyMass.ctor(System.String)", "Objects.Structural.Properties.PropertyMass");
          base.AddedToDocument(document);
        }
    }

    public class PropertyMass_9290611c_0a6b_24ac_01a4_f910d969ae16: CreateSchemaObjectBase {
        
        static PropertyMass_9290611c_0a6b_24ac_01a4_f910d969ae16() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public PropertyMass_9290611c_0a6b_24ac_01a4_f910d969ae16(): base("PropertyMass (general)", "PropertyMass (general)", "Creates a Speckle structural mass property", "Structural", "Properties"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("9290611c-0a6b-24ac-01a4-f910d969ae16");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Properties.PropertyMass.ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,System.Double)", "Objects.Structural.Properties.PropertyMass");
          base.AddedToDocument(document);
        }
    }
    
    public class PropertyMass_4940801b_0868_d60a_3c07_b87efe21b512UpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("6d45e69a-91c1-04ac-bc47-4cf5fcb6fd16");
        public Guid UpgradeTo => new("4940801b-0868-d60a-3c07-b87efe21b512");
    }


    public class PropertyMass_9290611c_0a6b_24ac_01a4_f910d969ae16UpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("db589ef0-18b7-f768-7024-2896cf588e7f");
        public Guid UpgradeTo => new("9290611c-0a6b-24ac-01a4-f910d969ae16");
    }

}
