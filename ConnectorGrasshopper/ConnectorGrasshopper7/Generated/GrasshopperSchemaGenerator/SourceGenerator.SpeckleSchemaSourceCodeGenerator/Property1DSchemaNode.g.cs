//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class Property1D_1985cb04_c78c_28b4_177b_7c4181296487: CreateSchemaObjectBase {
        
        static Property1D_1985cb04_c78c_28b4_177b_7c4181296487() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Property1D_1985cb04_c78c_28b4_177b_7c4181296487(): base("Property1D (by name)", "Property1D (by name)", "Creates a Speckle structural 1D element property", "Structural", "Properties"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("1985cb04-c78c-28b4-177b-7c4181296487");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Properties.Property1D.ctor(System.String)", "Objects.Structural.Properties.Property1D");
          base.AddedToDocument(document);
        }
    }

    public class Property1D_0bf87f23_3e52_a0f2_caaa_bc5b4b78a3dc: CreateSchemaObjectBase {
        
        static Property1D_0bf87f23_3e52_a0f2_caaa_bc5b4b78a3dc() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Property1D_0bf87f23_3e52_a0f2_caaa_bc5b4b78a3dc(): base("Property1D", "Property1D", "Creates a Speckle structural 1D element property", "Structural", "Properties"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("0bf87f23-3e52-a0f2-caaa-bc5b4b78a3dc");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.Structural.Properties.Property1D.ctor(System.String,Objects.Structural.Materials.StructuralMaterial,Objects.Structural.Properties.Profiles.SectionProfile)", "Objects.Structural.Properties.Property1D");
          base.AddedToDocument(document);
        }
    }
    
    public class Property1D_1985cb04_c78c_28b4_177b_7c4181296487UpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("1841ace9-fed0-83c2-269d-9bf47e76321e");
        public Guid UpgradeTo => new("1985cb04-c78c-28b4-177b-7c4181296487");
    }


    public class Property1D_0bf87f23_3e52_a0f2_caaa_bc5b4b78a3dcUpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("309d87bf-1c4d-043e-604c-f4ec3354239d");
        public Guid UpgradeTo => new("0bf87f23-3e52-a0f2-caaa-bc5b4b78a3dc");
    }

}
