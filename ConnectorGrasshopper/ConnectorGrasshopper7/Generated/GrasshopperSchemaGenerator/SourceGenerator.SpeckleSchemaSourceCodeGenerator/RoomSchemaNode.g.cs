//<auto-generated/>
using System;
using System.Linq;
using Grasshopper.Kernel;
using ConnectorGrasshopperUtils;
using ConnectorGrasshopper;

namespace ConnectorGrasshopper.SchemaNodes.AutoGenerated {
    
    public class Room_8c3de846_e8a2_5de4_1a33_2e5afa76a3e6: CreateSchemaObjectBase {
        
        static Room_8c3de846_e8a2_5de4_1a33_2e5afa76a3e6() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Room_8c3de846_e8a2_5de4_1a33_2e5afa76a3e6(): base("Room", "Room", "Creates a Speckle room", "BIM", "Architecture"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("8c3de846-e8a2-5de4-1a33-2e5afa76a3e6");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.BuiltElements.Room.ctor(System.String,System.String,Objects.BuiltElements.Level,Objects.Geometry.Point)", "Objects.BuiltElements.Room");
          base.AddedToDocument(document);
        }
    }

    public class Room_d6bf4825_5650_41b1_5165_32d94f2ba292: CreateSchemaObjectBase {
        
        static Room_d6bf4825_5650_41b1_5165_32d94f2ba292() {
          SpeckleGHSettings.SettingsChanged += (_, args) =>
          {
            if (!args.Key.StartsWith("Speckle2:tabs.")) return;
            var proxy = Grasshopper.Instances.ComponentServer.ObjectProxies.FirstOrDefault(p => p.Guid == internalGuid);
            if (proxy == null) return;
            proxy.Exposure = internalExposure;
          };
        }
        
        public Room_d6bf4825_5650_41b1_5165_32d94f2ba292(): base("RevitRoom", "RevitRoom", "Creates a Revit room with parameters", "Revit", "Architecture"){}
        
        internal static string internalCategory => "Speckle 2 Autogenerated";
        internal static Guid internalGuid => new Guid("d6bf4825-5650-41b1-5165-32d94f2ba292");
        internal static GH_Exposure internalExposure => GH_Exposure.tertiary;

        public override GH_Exposure Exposure => internalExposure;
        public override Guid ComponentGuid => internalGuid;

        public override void AddedToDocument(GH_Document document){
          SelectedConstructor = CSOUtils.FindConstructor("Objects.BuiltElements.Room.ctor(System.String,System.String,Objects.BuiltElements.Level,Objects.Geometry.Point,System.Collections.Generic.List`1[Objects.BuiltElements.Revit.Parameter])", "Objects.BuiltElements.Room");
          base.AddedToDocument(document);
        }
    }
    
    public class Room_8c3de846_e8a2_5de4_1a33_2e5afa76a3e6UpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("ded1c1cf-ec55-61b8-b5d9-06d9ac7ce41b");
        public Guid UpgradeTo => new("8c3de846-e8a2-5de4-1a33-2e5afa76a3e6");
    }


    public class Room_d6bf4825_5650_41b1_5165_32d94f2ba292UpgraderObject: IGH_UpgradeObject
    {
        public IGH_DocumentObject Upgrade(IGH_DocumentObject target, GH_Document document)
        {
          var component = target as IGH_Component;
          if (component == null)
            return null;

          var upgradedComponent = GH_UpgradeUtil.SwapComponents(component, UpgradeTo);
          UpgradeUtils.SwapGroups(document, component, upgradedComponent);
          return upgradedComponent;
        }

        public DateTime Version => new DateTime(2023, 3, 1);

        public Guid UpgradeFrom => new Guid("7163a835-8e54-512d-5270-de5c1fe0099c");
        public Guid UpgradeTo => new("d6bf4825-5650-41b1-5165-32d94f2ba292");
    }

}
